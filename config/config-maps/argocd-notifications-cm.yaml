---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-notifications-cm
  namespace: argocd
data:
  service.webhook.github: |
    url: "https://api.github.com"
    headers:
      - name: Accept
        value: "application/vnd.github+json"
      - name: Authorization
        valueFrom:
          secretKeyRef:
            name: github-token
            key: token
      - name: X-GitHub-Api-Version
        value: 2022-11-28

  template.github-deployment-status: |
    webhook:
      github:
        method: POST
        path: "/repos/{{ index .app.metadata.annotations \"github.com/owner\" }}/{{ index .app.metadata.annotations \"github.com/repo\" }}/dispatches"
        body: |
          {
            "owner": "{{ index .app.metadata.annotations "github.com/owner" }}",
            "repo": "{{ index .app.metadata.annotations "github.com/repo" }}",
            "event_type": "sync-deployment-status",
            "client_payload": {
              {{ if eq .app.status.operationState.phase "Running" }}
              "state": "in_progress",
              {{ else if eq .app.status.operationState.phase "Succeeded" }}
              "state": "success",
              {{ else if eq .app.status.operationState.phase "Error" }}
              "state": "error",
              {{ else }}
              "state": "failure",
              {{ end }}

              {{ if eq (index .app.metadata.annotations "github.com/environment") "preview" }}
              "environment_url": "https://{{ index .app.metadata.annotations "github.com/branch-slug" }}.sandbox.acme.com",
              {{ else if eq (index .app.metadata.annotations "github.com/environment") "sandbox" }}
              "environment_url": "https://sandbox.acme.com",
              {{ else }}
              "environment_url": "https://acme.com",
              {{ end }}

              "ref": "{{ index .app.metadata.annotations "github.com/ref" }}",
              "environment": "{{ index .app.metadata.annotations "github.com/environment" }}",
              "log_url": "{{ .context.argocdUrl }}/applications/{{ .app.metadata.name }}"
            }
          }

  trigger.sync-operation-change: |
    - when: app.status.operationState != nil and app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'
      send:
        - github-deployment-status
    - when: app.status.operationState != nil and app.status.operationState.phase in ['Running']
      send:
        - github-deployment-status
    - when: app.status.operationState != nil and app.status.operationState.phase in ['Error', 'Failed']
      send:
        - github-deployment-status
